# -*- coding: utf-8 -*-
"""Copy of E-Commerce Customer Segmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z7o5a8ndBnovoZYO4JlGPVq4EioOPCbl

**E-Commerce Customer Segmentation using K-Means Clustering**

Problem Statement: Given the e-commerce data, use k-means clustering algorithm to cluster customers with similar interest.

**Importing Libraries**
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import silhouette_score
from sklearn.cluster import KMeans
from yellowbrick.cluster import KElbowVisualizer

"""**Loading** **Dataset**"""

data=pd.read_excel('ecom customer_data(1).xlsx')
data

"""**Understanding Data**"""

data.head()

df=data.copy()

df.info()

df.describe()

df[df.duplicated()]

df.isna().sum()

df['Gender']=df['Gender'].fillna(df['Gender'].mode()[0])

df.isna().sum().sum()

df.Gender.value_counts()

"""**data visualization**"""

sns.countplot(data=df,x='Gender')
plt.show()

plt.figure(figsize=(15,5))
plt.subplot(1,2,1)
sns.countplot(data=df,x='Orders')

plt.subplot(1,2,2)
sns.countplot(data=df,x='Orders',hue='Gender')
plt.suptitle("Overall Orders VS Gender wise Orders")
plt.show()

cols=list(df.columns[2:])
def dist_list(lst):
  plt.figure(figsize=(30,30))
  for i, col in enumerate(lst,1):
    plt.subplot(6,6,i)
    sns.boxplot(data=df,x=df[col])
dist_list(cols)

plt.figure(figsize=(20,15))
sns.heatmap(df.iloc[:,3:].corr())
plt.show()

df.iloc[:2,:].hist(figsize=(40,30))
plt.show()

new_df=df.copy()
new_df['Total Search']=new_df.iloc[:,3:].sum(axis=1)

plt.figure(figsize=(13,8))
plt_data=new_df.sort_values('Total Search',ascending=False)[['Cust_ID','Gender','Total Search']].head(10)
sns.barplot(data=plt_data,
            x='Cust_ID',
            y='Total Search',
            hue='Gender',
            order=plt_data.sort_values('Total Search',ascending=False).Cust_ID)
plt.title("Top 10 Cust_ID based on Total Searches")
plt.show()

"""**Scaling Data**"""

x=df.iloc[:,2:].values
x

scale=MinMaxScaler()
features=scale.fit_transform(x)
features

"""**Elbow Method To Get Optimal K Value**"""

inertia=[]
for i in range(1,16):
  k_means=KMeans(n_clusters=i)
  k_means=k_means.fit(features)
  inertia.append(k_means.inertia_)

plt.figure(figsize=(20,7))
plt.subplot(1,2,1)
plt.plot(range(1,16),inertia, 'bo-')
plt.xlabel('No of clusters'),plt.ylabel('Inertia')

plt.subplot(1,2,2)
kmeans=KMeans()
visualize=KElbowVisualizer(kmeans,k=(1,16))
visualize.fit(features)
plt.suptitle("Elbow Graph and Elbow Visualizer")
visualize.poof()
plt.show()

"""**Silhouette Score For Each K Value**"""

silhouette_avg=[]
for i in range(2,16):
  #initialize kmeans cluster
  kmeans=KMeans(n_clusters=i)
  cluster_labels=kmeans.fit_predict(features)
  #Silhouette score
  silhouette_avg.append(silhouette_score(features,cluster_labels))

plt.figure(figsize=(10,7))
plt.plot(range(2,16),silhouette_avg, 'bX-')
plt.xlabel('Values of K')
plt.ylabel("Silhouette Score")
plt.title('Silhouette analysis for optimal K')
plt.show()

"""**K-Mean Model**"""

model=KMeans(n_clusters=3)
model=model.fit(features)

y_km=model.predict(features)
centers=model.cluster_centers_

df['Cluster']=pd.DataFrame(y_km)
df.to_csv("Cluster_data", index=False)

df["Cluster"].value_counts()

sns.countplot(data=df, x='Cluster')
plt.show()

"""**Analyzing Cluster**"""

c_df= pd.read_csv('Cluster_data')
c_df.head()

c_df['Total Search']= c_df.iloc[:,3:38].sum(axis=1)

cl_0=c_df.groupby(['Cluster','Gender'], as_index=False).sum().query('Cluster==0')
cl_0

plt.figure(figsize=(15,6))
plt.subplot(1,2,1)
sns.countplot(data=c_df.query('Cluster==0'),x='Gender')
plt.title('Customers count')

plt.subplot(1,2,2)
sns.barplot(data=cl_0, x='Gender', y='Total Search')
plt.title('Total Searches by Gender')
plt.suptitle('No. of customer and their total searches in "Cluster 0"')
plt.show()

cl_1=c_df.groupby(['Cluster','Gender'], as_index=False).sum().query('Cluster==1')
cl_1

plt.figure(figsize=(15,6))
plt.subplot(1,2,1)
sns.countplot(data=c_df.query('Cluster==1'),x='Gender')
plt.title('Customers count')

plt.subplot(1,2,2)
sns.barplot(data=cl_1, x='Gender', y='Total Search')
plt.title('Total Searches by Gender')
plt.suptitle('No. of customer and their total searches in "Cluster 1"')
plt.show()

cl_2=c_df.groupby(['Cluster','Gender'], as_index=False).sum().query('Cluster==2')
cl_2

plt.figure(figsize=(15,6))
plt.subplot(1,2,1)
sns.countplot(data=c_df.query('Cluster==2'),x='Gender')
plt.title('Customers count')

plt.subplot(1,2,2)
sns.barplot(data=cl_2, x='Gender', y='Total Search')
plt.title('Total Searches by Gender')
plt.suptitle('No. of customer and their total searches in "Cluster 2"')
plt.show()

final_df=c_df.groupby(['Cluster','Gender'], as_index=False).sum()
final_df

plt.figure(figsize=(15,6))
sns.countplot(data=c_df,x='Cluster',hue='Gender')
plt.title('Total Customer on each cluster')
plt.show()

plt.figure(figsize=(15,6))
plt.subplot(1,2,1)
sns.barplot(data=final_df, x='Cluster',y='Total Search')
plt.title('Total Searches by eacg group')

plt.subplot(1,2,2)
sns.barplot(data=final_df, x='Cluster', y='Orders')
plt.title('Past Orders by each group')
plt.suptitle('No. of times customer searched the products and their past orders')
plt.show()

plt.figure(figsize=(15,6))

plt.subplot(1,3,3)
sns.lineplot(data=final_df, x='Cluster', y='Total Search', label='Total Searches')
sns.lineplot(data=final_df, x='Cluster', y='Orders', label='Past Orders')
plt.title('Trend of Total Searches and Past Orders')
plt.xlabel('Cluster')
plt.ylabel('Count')
plt.legend()

plt.suptitle('No. of times customer searched the products and their past orders')
plt.tight_layout()
plt.show()

"""**Conclusion**

bold textFrom the above Cluster analysis these are the following insights about each clusters: Among 30000 customers

*   Cluster 0 has 12432 customers (Very Low past orders but done most searches)

*   Cluster 1 has 9128 customers (Very High past orders and average searches)


*   Cluster 2 has 8440 customers (Average past orders and average searches)

*   Cluster 0 has many customers but their past orders is only 7560.


*   Cluster 1 is at the top based on past orders with 79885 orders which is more than 10 times of Cluster 0.
*   Cluster 2 has least number of customers but has 37649 past orders which is almost 500% greater than cluster 0.



*   Cluster 0 has done most number of searches with 81477 searches.

*   Cluster 2 has least number of searches with 60093 searches followed by cluster 1 with 64573 searches.












"""